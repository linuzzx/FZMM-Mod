plugins {
    id 'fabric-loom' version '1.0-SNAPSHOT'
    id 'maven-publish'
}

version = "${project.mod_version}+mc${project.minecraft_version}"
group = project.maven_group

repositories {
    maven {
        name = "TerraformersMC"
        url = "https://maven.terraformersmc.com/releases/"
    }

    maven { url 'https://maven.wispforest.io' }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation(fabricApi.module('fabric-command-api-v2', project.fabric_version))
    modImplementation(fabricApi.module('fabric-item-group-api-v1', project.fabric_version))
    modImplementation(fabricApi.module('fabric-key-binding-api-v1', project.fabric_version))

    // owo lib
    modImplementation annotationProcessor ("io.wispforest:owo-lib:${project.owo_version}")


    // include this if you don't want force your users to install owo
    // sentinel will warn them and give the option to download it automatically
    include "io.wispforest:owo-sentinel:${project.owo_version}"

    // Mod Menu
    modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"

    // https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient
    implementation "org.apache.httpcomponents:httpclient:${apache_httpclient_version}"
    include "org.apache.httpcomponents:httpclient:${apache_httpclient_version}"

    // https://mvnrepository.com/artifact/org.apache.httpcomponents/httpmime
    implementation "org.apache.httpcomponents:httpmime:${apache_httpmime_version}"
    include "org.apache.httpcomponents:httpmime:${apache_httpmime_version}"

}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17

    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archives_base_name}"}
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    repositories {

    }
}

loom {
    accessWidenerPath = file("src/main/resources/fzmm.accesswidener")
}